- name: Install packages
  apt:
    pkg: [
      'python3-pip', 'python3-dev', 'python3-setuptools', 'python3-venv',
      'git', 'libyaml-dev', 'build-essential', 'haproxy',
      'subversion', 'libjpeg-turbo8-dev', 'imagemagick', 'ffmpeg', 'libv4l-dev', 'cmake'
    ]
    update_cache: yes
    cache_valid_time: 86400

- name: Make direcrory
  file:
    path: '/home/ubuntu/{{item}}'
    state: directory 
    mode: 0755
  with_items:
    - OctoPrint
    - scripts
  become: no

- name: Initialize venv
  shell: python3 -m venv venv
  args:
    chdir: /home/ubuntu/OctoPrint
  become: no

- name: Install OctoPrint
  pip:
    name: octoprint
    virtualenv: /home/ubuntu/OctoPrint/venv
  become: no

- name: Join group
  user:
    name: ubuntu
    groups: tty, dialout
    append: yes
    
- name: Install service
  get_url:
    url: https://github.com/OctoPrint/OctoPrint/raw/master/scripts/octoprint.service
    dest: /etc/systemd/system/octoprint.service

- name: Edit service
  lineinfile:
    dest: /etc/systemd/system/octoprint.service
    regexp: '{{item.regexp}}'
    line: '{{item.line}}'
  with_items:
    - regexp: ExecStart=/home/pi/OctoPrint/venv/bin/octoprint
      line: ExecStart=/home/ubuntu/OctoPrint/venv/bin/octoprint
    - regexp: User=pi
      line: User=ubuntu
  notify: restart octoprint

- name: Setting HAProxy
  template:
    src: haproxy/haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    owner: root
    group: root
    mode: 0440
  notify: restart haproxy

- name: Checkout mjpg-streamer
  git:
    repo: https://github.com/jacksonliam/mjpg-streamer.git
    dest: /home/ubuntu/mjpg-streamer
  become: no

- name: Build mjpg-streamer
  shell: make
  args:
    chdir: /home/ubuntu/mjpg-streamer/mjpg-streamer-experimental
  become: no

- name: Install daemon script
  template:
    src: mjpg_streamer/webcamDaemon.j2
    dest: /home/ubuntu/scripts/webcamDaemon
    mode: 0755
  become: no

- name: Install service
  template:
    src: mjpg_streamer/webcamd.service.j2
    dest: /etc/systemd/system/webcamd.service
  notify: restart webcamd

- name: Enable service
  systemd:
    name: '{{item}}'
    enabled: yes
  with_items:
    - octoprint
    - webcamd

- name: Check config.yaml
  stat:
    path: /home/ubuntu/.octoprint/config.yaml
  register: config

- name: Initial startup of OctoPrint
  systemd:
    state: restarted
    daemon_reload: yes
    name: octoprint
  when: not config.stat.exists

- name: Wait for startup of OctoPrint
  pause:
    seconds: 10
  when: not config.stat.exists
  
- name: Edit config
  lineinfile:
    dest: /home/ubuntu/.octoprint/config.yaml
    regexp: host
    line: 'host: 127.0.0.1'
    insertafter: EOF
  become: no
  notify: restart octoprint

# Local Variables:
# mode: yaml
# tab-width: 4
# End:
