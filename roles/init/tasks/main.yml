- name: Change Apt Repository
  replace:
    path: '/etc/apt/sources.list'
    regexp: 'http://ports\.ubuntu\.com'
    replace: 'http://jp.ports.ubuntu.com'

- name: Upgrade Packages
  apt:
    update_cache: 'yes'
    upgrade: 'yes'

- name: Install Packages
  apt:
    pkg: [
      'postfix', 'i2c-tools', 'wiringpi', 'python3-gpiozero',
      'python3-smbus', 'zsh', 'emacs-nox', 'git', 'mailutils',
      'lsb-release', 'net-tools', 'daemontools', 'inetutils-traceroute',
      'zabbix-agent', 'wireless-tools', 'iw', 'cpufrequtils'
    ]
    update_cache: 'yes'
    cache_valid_time: 86400

- name: Uninstall clout-init
  apt:
    name: 'cloud-init'
    state: 'absent'
    purge: 'yes'

- name: Setting Hostname
  lineinfile:
    dest: '/etc/hosts'
    regexp: '^127.0.1.1.*$'
    line: '127.0.1.1        {{ ansible_hostname }}'

- name: Setting Timezone
  timezone:
    name: 'Asia/Tokyo'

- name: Generate Locales
  locale_gen:
    name: '{{ item }}'
  with_items:
    - en_US.UTF-8
    - ja_JP.UTF-8

- name: Setting Sudo
  template:
    src: 'sudo/sudoers.j2'
    dest: '/etc/sudoers'
    owner: 'root'
    group: 'root'
    mode: '0440'

- name: Disable logging for sudo and cron
  lineinfile:
    dest: '{{item}}'
    line: 'session [success=1 default=ignore] pam_succeed_if.so quiet_success uid = 0'
    insertbefore: '@include common-session-noninteractive'
  with_items:
    - '/etc/pam.d/sudo'
    - '/etc/pam.d/cron'

- name: Setting SSHD
  template:
    src: 'ssh/sshd_config.j2'
    dest: '/etc/ssh/sshd_config'
  notify: restart sshd

- name: Setting NTP client
  replace:
    path: '/etc/systemd/timesyncd.conf'
    regexp: '^#?NTP=.*$'
    replace: 'NTP={{ network.ntp }}'
  notify: restart timesyncd

- name: Enable systemd-time-wait-sync
  systemd:
    name: systemd-time-wait-sync.service
    enabled: yes

- name: Disable APT auto update
  lineinfile:
    dest: '/etc/apt/apt.conf.d/20auto-upgrades'
    regexp: '{{item.regexp}}'
    line: '{{item.line}}'
  with_items:
    - regexp: '^APT::Periodic::Update-Package-Lists .*'
      line: 'APT::Periodic::Update-Package-Lists "0";'
    - regexp: '^APT::Periodic::Unattended-Upgrade .*'
      line: 'APT::Periodic::Unattended-Upgrade "0";'

- name: Create /etc/rc.local
  lineinfile:
    dest: '/etc/rc.local'
    create: true
    owner: 'root'
    group: 'root'
    mode: '755'
    line: '#!/bin/bash'
    regexp: '#!/.*'
    insertbefore: 'BOF'

- name: Wait execution of rc.local until time synced
  lineinfile:
    dest: '/lib/systemd/system/rc-local.service'
    regexp: '^After=.*$'
    line: 'After=systemd-time-wait-sync.service'

- name: Setting USB off
  blockinfile:
    dest: '/etc/rc.local'
    content: |
      # USB off
      for i in 20980000.usb 3f980000.usb; do
        path="/sys/devices/platform/soc/${i}/buspower";
        if [ -e $path ]; then
          echo 0 > $path;
        fi;
      done
    insertbefore: 'exit 0'

- name: Setting Wifi - dhcp
  # NOTE: Wifi の場合は「ホスト名-wifi」でアクセスできるようにする
  lineinfile:
    dest: '/etc/dhcp/dhclient.conf'
    line: 'interface "wlan0" { send host-name = concat (gethostname(), "-wifi"); }'

- name: Setting Zabbix agent
  lineinfile:
    dest: '/etc/zabbix/zabbix_agentd.conf'
    regexp: '{{item.regexp}}'
    line: '{{item.line}}'
  with_items:
    - regexp: '^Server=.*$'
      line: 'Server={{network.zabbix}}'
    - regexp: '^ServerActive=.*$'
      line: 'ServerActive={{network.zabbix}}'
  notify: restart zabbix agent

- name: Enable I2C at 50kHz
  lineinfile:
    dest: '/boot/firmware/usercfg.txt'
    insertafter: 'dtparam=i2c_arm=on'
    line: 'dtparam=i2c_baudrate=50000'

- name: Disable Serial Console
  replace:
    dest: '/boot/firmware/cmdline.txt'
    regexp: 'console=serial0,115200 '
    replace: ' '

- name: Load I2C module
  lineinfile:
    dest: '/etc/modules'
    line: 'i2c-dev'

- name: Setting Port drive strength
  lineinfile:
    dest: '/etc/rc.local'
    regexp: '^gpio drive.*$'
    line: 'gpio drive 0 7'
    insertbefore: 'exit 0'

- name: Setting WiFi - watch
  template:
    src: 'wifi/watch_wifi.zsh.j2'
    dest: '/usr/local/bin/watch_wifi.zsh'
    owner: 'root'
    group: 'root'
    mode: '755'

- name: Setting WiFi - watch cron
  cron:
    name: 'watch wifi connection'
    minute: '*/2'
    job: '/usr/local/bin/watch_wifi.zsh > /dev/null'

- name: Setting Postfix
  lineinfile:
    dest: '{{item.dest}}'
    regexp: '{{item.regexp}}'
    line: '{{item.line}}'
  with_items:
    - dest: '/etc/postfix/main.cf'
      regexp: '^relayhost =.*'
      line: 'relayhost = [{{network.mail}}]'
    - dest: '/etc/postfix/main.cf'
      regexp: '^myhostname =.*'
      line: 'myhostname = {{ ansible_hostname }}'
    - dest: '/etc/aliases'
      regexp: '^root:.*'
      line: "root: {{network.root_mail}}"
    - dest: '/etc/aliases'
      regexp: '^ubuntu:.*'
      line: "ubuntu: {{network.root_mail}}"
  notify: restart postfix

- name: Boot nofitication
  lineinfile:
    dest: '/etc/rc.local'
    line: 'echo "System restarted at " `date` | mail -s "`hostname`: restart" root'
    insertbefore: 'exit 0'

- name: Disable WiFi power save
  lineinfile:
    dest: '/etc/rc.local'
    line: 'iwconfig wlan0 power off'
    insertbefore: 'exit 0'

- name: Power save
  lineinfile:
    dest: '/etc/rc.local'
    line: 'cpufreq-set -g powersave'
    insertbefore: 'exit 0'

- name: Enable Watchdog
  lineinfile:
    dest: '/boot/firmware/usercfg.txt'
    insertbefore: 'EOF'
    line: 'dtparam=watchdog=on'

- name: Setting Watchdog
  lineinfile:
    create: 'yes'
    dest: '/etc/modprobe.d/bcm2835-wdt.conf'
    regexp: '^options bcm2835_wdt heartbeat='
    line: 'options bcm2835_wdt heartbeat=60'

- name: Setting Heartbeat
  lineinfile:
    dest: '/etc/systemd/system.conf'
    regexp: '{{item.regexp}}'
    line: '{{item.line}}'
  with_items:
    - regexp: '^#?RuntimeWatchdogSec'
      line: 'RuntimeWatchdogSec=10'
    - regexp: '^#?ShutdownWatchdogSec'
      line: 'ShutdownWatchdogSec=1min'

- name: Join I2C group
  user:
    name: ubuntu
    group: i2c
    append: yes

- name: Copy uboot.env (setenv bootdelay -2)
  copy:
    src: uboot.env
    dest: '/boot/firmware/uboot.env'
    mode: '0755'

- name: Check that snap exists
  stat:
    path: '/usr/bin/snap'
  register: snap_path

- name: Remove Snap packages
  snap:
    name: '{{item}}'
    state: 'absent'
  with_items:
    - lxd
    - core18
    - snapd
  when: snap_path.stat.exists

- name: Unmount Snap mount points
  mount:
    path: '{{item}}'
    state: 'unmounted'
  with_items:
    - /snap/lxd/*
    - /snap/core18/*
    - /snap/snapd/*

- name: Uninstall Snap
  apt:
    name: 'snapd'
    state: 'absent'
    purge: 'yes'

- name: Setting logrotate
  replace:
    path: '{{ item }}'
    regexp: 'weekly'
    replace: 'daily'
  with_items:
    - /etc/logrotate.conf
    - /etc/logrotate.d/rsyslog

# Local Variables:
# mode: yaml
# tab-width: 4
# End:
